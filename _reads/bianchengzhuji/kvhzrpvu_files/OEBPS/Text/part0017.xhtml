<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="zh-CN">
<head>
  <meta charset="utf-8"/>
  <meta http-equiv="X-UA-Compatible" content="IE=edge"/>
  <meta name="viewport" content="width=device-width, initial-scale=1"/>
  
    <title>部分习题提示</title>
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8"/>
  <link rel="stylesheet" type="text/css" href="../../stylesheet.css"/>
<link rel="stylesheet" type="text/css" href="../../page_styles.css"/>

  

  <link href="../../calibreHtmlOutBasicCss.css" type="text/css" rel="stylesheet" />
</head>
<body>


<div class="calibreMain">
  <div class="calibreEbookContent">
    
<h1 class="firsttitle">
<a href="part0000.xhtml#toc141">部分习题提示</a>
</h1>
<p class="content_1">第1章提示</p>
<p class="content">4.阅读第12章。</p>
<p class="content">5.考虑两趟算法。</p>
<p class="content">6、8、9.使用关键字索引。</p>
<p class="content">10.考虑散列，并且不要局限于计算机系统。</p>
<p class="content">11.考虑鸟类。</p>
<p class="content">12.不使用钢笔你如何写字？</p>
<p class="content_1">第2章提示</p>
<p class="content">1.考虑排序、二分搜索和标识。</p>
<p class="content">2.争取获得线性运行时间的算法。</p>
<p class="content">5.利用恒等式cba=(a <span class="super">r</span>
 b<span class="super">r</span>
 c<span class="super">r</span>
 )<span class="super">r</span>
 。</p>
<p class="content">7.Vyssotsky使用了一个系统工具和两个一次性的程序，他编写后两个程序仅仅是为了重新组织磁带上的数据。</p>
<p class="content">8.考虑集合中最小的k个元素。</p>
<p class="content">9.s次顺序搜索的开销正比于sn，s次二分搜索的总开销等于搜索的开销加上对表排序所需的时间。在对各种算法的常量因子给予足够的信任之前，请看习题9.9。</p>
<p class="content">10.阿基米德如何确定皇冠不是纯金的？</p>
<p class="content_1">第3章提示</p>
<p class="content">2.用一个数组表示递归的系数，另一个数组表示前面 k 个值。程序在一个循环内部包含另一个循环。</p>
<p class="content">4.只需要从头开始编写一个函数，其他两个函数都可以调用它。</p>
<p class="content_1">第4章提示</p>
<p class="content">2.使用精确的不变式。考虑在数组中添加两个假想的元素来初始化不变式：x[ 1]− =−∞和x[n]=∞。</p>
<p class="content">5.如果你解决了这个问题，请到最靠近的数学系申请一个博士学位。</p>
<p class="content">6.寻找该过程中的不变式，并将罐中的初始条件和终止条件联系起来。</p>
<p class="content">7.再次阅读2.2节。</p>
<p class="content">9.使用下面的循环不变式，它们在 while 语句中的测试之前为真。对于向量加法， i≤n &amp;&amp;∀<span class="sub">1≤j&lt;i</span>
 a [j]=b[j]+c[j]；对于顺序搜索，i≤n &amp;&amp;∀<span class="sub">1≤j&lt;i</span>
 x [j]≠t。</p>
<p class="content">11.参考答案11.14中把数组指针传递给swap函数的递归函数。</p>
<p class="content_1">第5章提示</p>
<p class="content">3.搜索“mutation testing”之类的术语。</p>
<p class="content">5.仅进行O(log n)或O(1)次额外的比较，如何实现？</p>
<p class="content">6.本书网站上提供了一个带有图形用户界面的Java程序，可用于研究排序算法。</p>
<p class="content">9.脚手架以制表符作为分隔符，这种输出格式能够兼容大多数的电子表格。我通常将一系列的相关实验和它们的性能图表存储在同一页电子表格上，并在该页说明为什么做这些实验以及从中能学到什么。</p>
<p class="content_1">第6章提示</p>
<p class="content">1.见8.5节。</p>
<p class="content">3.修改附录C中描述的运行时间开销模型，以度量双精度运算的开销。</p>
<p class="content">7.可以通过驾驶培训、严格限速、限制饮酒的最小年龄、严惩酒后驾车、建立良好的公共交通运输系统等措施来避免交通事故。一旦发生了交通事故，可以通过乘客舱的设计以及安全带（可能跟法律的规定一样）和安全气囊的使用来降低乘客的受伤程度。一旦有人受伤了，可以借助现场护理、救护直升机、外伤中心和矫正手术来降低伤害造成的后果。</p>
<p class="content_1">第7章提示</p>
<p class="content">5.首先从函数(1+x/100)<span class="super">72/x</span>
 出发，得到(1+0.72/x)<span class="super">x</span>
 并使用电子表格绘图。为了证明“72法则”的性质，需要用到下面几个结论：lim<span class="sub">n→∞</span>
 (1+c/n)<span class="super">n</span>
 =e<span class="super">c</span>
 ，2的自然对数约为0.693，并且渐近线并不总是最佳逼近线。</p>
<p class="content">8.请特别留意习题2.7、8.10、8.12、8.13、9.4、10.10、11.6、12.7、12.9、12.11、13.3、13.6、13.11、15.4、15.5、15.7、15.9和习题15.15，以及习题1.3、2.2、2.4、2.8、10.2、12.3、13.2、13.3、13.8、14.3、14.4、15.1、15.2和15.3节中的设计和程序。</p>
<p class="content_1">第8章提示</p>
<p class="content">4.绘制随机遍历的累加和。</p>
<p class="content">7.浮点加法不一定需要关联。</p>
<p class="content">8.除了计算区域中的最大和之外，返回数组每端最大向量结束的信息。10、11、12.使用累加数组。</p>
<p class="content">13.显而易见的算法的运行时间为O(n<span class="super">4</span>
 )，请给出一种立方算法。</p>
<p class="content_1">第9章提示</p>
<p class="content">3.由于加法最多只能使k增加n-1，我们可以确定k小于2n。</p>
<p class="content">9.要使得即便 n 非常小的时候，二分搜索也跟顺序搜索差不多，只需要使比较操作的开销很大就可以了。</p>
<p class="content_1">第10章提示</p>
<p class="content">1.编译器生成什么样的代码来访问压缩字段？</p>
<p class="content">5.混合并匹配函数和表格。</p>
<p class="content">7.假设内存中的特定范围是等价的，这样就可以减少数据。这里所说的范围既可以是固定长度的块（如64字节），也可以是函数边界。</p>
<p class="content_1">第11章提示</p>
<p class="content">2.使循环下标i从高到低变化，逐渐靠近x[l]中的已知值t。</p>
<p class="content">4.当你有两个子问题需要解决时，哪个问题应该立即解决，哪个问题应该留在栈上等以后解决——大一些的子问题还是小一些的子问题？</p>
<p class="content">9.修改快速排序，使其仅在包含k的子范围内进行递归。</p>
<p class="content_1">第12章提示</p>
<p class="content">4.向统计学家请教“赠券收集问题”和“生日悖论”。</p>
<p class="content">11.该问题陈述表明，你可以使用计算机，但并非必须使用计算机。</p>
<p class="content_1">第13章提示</p>
<p class="content">2.应进行错误检查，以确保待插入的整数在正确的范围内，且数据结构还没有被填满。此外，还应该用一个析构函数来返回所分配的存储空间。</p>
<p class="content">3.使用二分搜索来测试某个元素是否在有序数组中。</p>
<p class="content_1">第14章提示</p>
<p class="content">2.我们的目标是得到一个具有如下结构的堆排序。</p>
<div class="bodypic_"><img alt="步骤0堆步骤n堆有序的步骤2n−1" src="../Images/image00252.jpeg" class="calibre3"/>
</div>
<p class="content">3.见习题2，同时考虑把代码移出循环。</p>
<p class="content">6.堆具有结点i到结点2i的隐式指针，为磁盘文件也加上这一指针。</p>
<p class="content">7.x[0..6]上的二分搜索使用了根为x[3]的隐式树。若使用14.1节的隐式树，情况会怎样？</p>
<p class="content">9.对排序使用O(n log n)下界。如果insert和extractmin的运行时间都小于 O(log n)，那么排序时间可以小于O(n log n)。说明如何使用这两个操作来更快地排序。</p>
<p class="content_1">第15章提示</p>
<p class="content">15.假设我们正从一个有100万个单词的文档中生成1阶马尔可夫文本，该文档只在短语“x y x z”中包含单词x、y和z。x后面跟y的可能性应为1/2，后面跟z的可能性也应为1/2。在香农的算法中有什么差别？</p>
<p class="content">16.如何利用k连字母或k连单词的计数？</p>
<p class="content">17.一些商业语音识别器是基于三连统计的。</p>



  </div>

  <div class="calibreEbNav">
    
      <a href="part0016.xhtml" class="calibreAPrev">上一页
</a>
    

    <a href="../../../kvhzrpvu.html" class="calibreAHome">目录
</a>

    
      <a href="part0018.xhtml" class="calibreANext">下一页
</a>
    
  </div>

</div>

</body>
</html>
