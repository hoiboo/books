<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="zh-CN">
<head>
  <meta charset="utf-8"/>
  <meta http-equiv="X-UA-Compatible" content="IE=edge"/>
  <meta name="viewport" content="width=device-width, initial-scale=1"/>
  
    <title>第2版跋</title>
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8"/>
  <link rel="stylesheet" type="text/css" href="../../stylesheet.css"/>
<link rel="stylesheet" type="text/css" href="../../page_styles.css"/>

  

  <link href="../../calibreHtmlOutBasicCss.css" type="text/css" rel="stylesheet" />
</head>
<body>


<div class="calibreMain">
  <div class="calibreEbookContent">
    
<h1 class="firsttitle">
<a href="part0000.xhtml#toc135">第2版跋</a>
</h1>
<p class="content">有的传统因为内在价值而得以延续，其他传统不管怎样也没有消失。</p>
<p class="content">问：欢迎归来，已经过去很多年了。</p>
<p class="content">答：14年了<span id="ref60">
<a href="part0011.xhtml#annot60">[1]</a>
</span>
 。</p>
<p class="content">问：让我们继续上次的问答吧，为什么要出这本书的新版？</p>
<p class="content">答：我非常、非常喜欢这本书。写这本书很有趣，这么多年来读者也一直非常支持我。书中的原理经受住了时间的检验，但第1版中的很多例子已经过时了。现在的读者很难理解只有半兆字节内存的所谓“巨型”计算机。</p>
<p class="content">问：那你在本版中做了哪些修改呢？</p>
<p class="content">答：很多，我在前言中说了这些改进。你在提问前没有看一下吗？</p>
<p class="content">问：噢，对不起。我看到了前言中你说到如何从本书网站上获取代码。</p>
<p class="content">答：在完成第2版的过程中，编写这些代码是最有趣的。在第1版中我实现了大多数程序，但只有我自己才能看到实际代码。在第2版中，我大约编写了2 500行C和C++代码，让全世界都能看到。</p>
<p class="content">问：你说这些代码准备向大众公开吗？我阅读了一部分，风格很糟糕！变量名太短，函数定义很奇怪，一些全局变量应该作为参数，等等。如果让真正的软件工程师看到这些代码，你不会感到难堪吗？</p>
<p class="content">答：我用的风格在大型软件项目中确实是致命的。不过本书不是一个大型软件项目，连一本大型的书都算不上。答案5.1描述了简洁的编码风格和我选择这种编码风格的原因。要是我打算写一本上千页的书，我会采用长一些的编码风格。</p>
<p class="content">问：说到长代码，你的sort.cpp程序度量了C标准库函数qsort、C++标准模板库函数sort和几个手写的快速排序函数的性能。你不能选定一个吗？程序员到底应该使用库函数还是应该从头开始自己编写代码？</p>
<p class="content">答：Tom Duff给出了最佳答案：“尽可能地‘盗用’已有的代码。”库函数很棒，尽可能地利用它们来解决问题。首先搜索系统库，然后再从其他库中寻找适当的函数。不过，在任何一种工程活动中，并非所有的工具都总能满足所有客户的需求。当库函数不能满足需求时，程序员就需要亲自动手编写函数，我希望书中的伪代码片段（和网站上的真实代码）在这时能派上用场。我认为，本书提供的脚手架和实验方法能够帮助程序员评估各种算法的性能，并从中挑选出最佳算法。</p>
<p class="content">问：除了向大众公开代码并更新一些故事之外，第2版中真正有新意的地方是什么？答：我尝试着从高速缓存和指令级并行性的角度来考虑代码调优。从更大一些的层面上讲，新增的3章内容反映了第2版中的3个主要变动：第5章描述了真实的代码和脚手架，第13章给出了数据结构的细节，第15章派生出了高级算法。书中的多数观点此前已发表过，但附录 C 中的空间开销模型和 15.3 节的马尔可夫文本算法是首次出现。新的马尔可夫文本算法决不亚于Kernighan和Pike提出的经典算法。</p>
<p class="content">问：这些年来你接触过的贝尔实验室的人更多了。从我们上次的交谈可以看出，你对那个地方非常有感情。但是你只在那里呆了几年的时间，贝尔实验室在过去的14年中变化很大。你怎么看待现在的贝尔实验室和这些改变？</p>
<p class="content">答：在我编写本书前几章的时候，贝尔实验室是贝尔系统公司的一部分；第1版出版的时候，我们是AT&amp;T的一部分，现在我们是朗讯科技的一部分。在这段时间里，公司、通信产业和计算领域都发生了翻天覆地的变化。贝尔实验室跟上了这些变化，而且往往还是变革的先驱。我进入这个实验室，是因为我喜欢在理论和应用之间保持平衡，是因为我既想开发产品又想写书。我在贝尔实验室工作的这些年里，虽然时而偏向理论，时而偏向应用，但我的老板总是鼓励我从事各种各样的活动。</p>
<p class="content">本书第1版的一位审稿人这样写道：“Bentley每天的工作环境是一个编程天堂。他是位于新泽西州莫雷山的贝尔实验室技术部成员，能够直接接触到最先进的硬件和软件技术，并和全世界最优秀的一些软件开发人员一起进餐。”现在的贝尔实验室仍然是这种地方。</p>
<p class="content">问：每天都生活在天堂中吗？</p>
<p class="content">答：很多日子都好像生活在天堂中，而其他时光也非常美好。</p>
<hr class="calibre2"/>
<p class="noindent" id="annot60">
<a href="part0011.xhtml#ref60">[1].</a>
 本书第1版出版于1986年，第2版出版于2000年，间隔正好是14年。——译者注</p>



  </div>

  <div class="calibreEbNav">
    
      <a href="part0010.xhtml" class="calibreAPrev">上一页
</a>
    

    <a href="../../../kvhzrpvu.html" class="calibreAHome">目录
</a>

    
      <a href="part0012.xhtml" class="calibreANext">下一页
</a>
    
  </div>

</div>

</body>
</html>
